[gd_scene load_steps=5 format=3 uid="uid://dag18v5gqgw7y"]

[ext_resource type="Texture2D" uid="uid://bjdv4aap1bdyr" path="res://addons/SignalBus/icons/Remove.svg" id="1_usub3"]
[ext_resource type="Texture2D" uid="uid://ctwne7v3i7exe" path="res://addons/SignalBus/icons/ImportCheck.svg" id="2_u0mba"]

[sub_resource type="GDScript" id="GDScript_usub3"]
resource_name = "global_signal_node"
script/source = "@tool
extends VBoxContainer

const PARAM_CONTAINER_SCENE: PackedScene = preload(\"res://addons/SignalBus/global_signal_param_container.tscn\")

@onready var signal_name_label := %SignalName
@onready var param_container: Control = %ParamVBoxContainer
@onready var new_param_button: Control = %NewParameterButton

@export var global_signal: GlobalSignal:
	set(val):
		if val:
			if global_signal:
				if global_signal.changed.is_connected(update_gui):
					global_signal.changed.disconnect(update_gui)
				if global_signal.file_deleted.is_connected(_free_self):
					global_signal.file_deleted.disconnect(_free_self)
			global_signal = val
			global_signal.changed.connect(update_gui)
			global_signal.file_deleted.connect(_free_self)
			update_gui()
		else:
			if global_signal:
				if global_signal.changed.is_connected(update_gui):
					global_signal.changed.disconnect(update_gui)
				if global_signal.file_deleted.is_connected(_free_self):
					global_signal.file_deleted.disconnect(_free_self)
				global_signal = null
				update_gui()

func _ready():
	update_gui()

func update_gui():
	update_name_label()
	update_parameter_containers()

func update_name_label():
	if signal_name_label:
		if global_signal:
			signal_name_label.text = global_signal.signal_name
		else:
			signal_name_label.text = \"\"

func update_parameter_containers():
	if param_container:
		for param in param_container.get_children():
			param.queue_free()
		for param in global_signal.signal_parameters:
			var new_param = PARAM_CONTAINER_SCENE.instantiate()
			new_param.global_signal = global_signal
			new_param.param_key = param
			param_container.add_child(new_param)

func _on_new_parameter_button_pressed():
	global_signal.set_parameter(\"new_parameter\",TYPE_NIL)
	update_parameter_containers()
	new_param_button.release_focus()

func _on_delete_signal_button_pressed():
	SignalBus.remove_global_signal(global_signal)
	global_signal.delete_resource_file()
	queue_free()

func _free_self(signal_name:String):
	queue_free()

func _on_emit_signal_button_pressed():
	SignalBus.emit_signal(global_signal.signal_name)
"

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_usub3"]
bg_color = Color(0.0941176, 0.101961, 0.113725, 1)

[node name="GlobalSignalNode" type="VBoxContainer"]
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
size_flags_vertical = 0
alignment = 2
script = SubResource("GDScript_usub3")

[node name="Panel" type="PanelContainer" parent="."]
layout_mode = 2
theme_override_styles/panel = SubResource("StyleBoxFlat_usub3")

[node name="HBoxContainer" type="HBoxContainer" parent="Panel"]
layout_mode = 2

[node name="EmitSignalButton" type="Button" parent="Panel/HBoxContainer"]
unique_name_in_owner = true
layout_mode = 2
tooltip_text = "Test emitting signal"
icon = ExtResource("2_u0mba")

[node name="SignalName" type="Label" parent="Panel/HBoxContainer"]
unique_name_in_owner = true
layout_mode = 2
vertical_alignment = 1

[node name="DeleteSignalButton" type="Button" parent="Panel/HBoxContainer"]
unique_name_in_owner = true
layout_mode = 2
size_flags_horizontal = 10
tooltip_text = "Delete global signal"
icon = ExtResource("1_usub3")

[node name="ParamVBoxContainer" type="VBoxContainer" parent="."]
unique_name_in_owner = true
layout_mode = 2
size_flags_vertical = 3

[node name="NewParameterButton" type="Button" parent="."]
unique_name_in_owner = true
layout_mode = 2
text = "+ Add new parameter"

[connection signal="pressed" from="Panel/HBoxContainer/EmitSignalButton" to="." method="_on_emit_signal_button_pressed"]
[connection signal="pressed" from="Panel/HBoxContainer/DeleteSignalButton" to="." method="_on_delete_signal_button_pressed"]
[connection signal="pressed" from="NewParameterButton" to="." method="_on_new_parameter_button_pressed"]
